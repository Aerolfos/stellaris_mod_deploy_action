name: Testing
run-name: "Code testing, triggered by ${{ github.actor }} due to ${{ github.event_name }}"

# referenced https://github.com/astral-sh/ruff/blob/main/.github/workflows/ci.yaml for example
on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  job-run-tests:
    runs-on: ubuntu-latest

    steps:
    - name: "Clone repository"
      uses: actions/checkout@v4

    - name: "Install uv"
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
        enable-cache: true
        activate-environment: true

    - name: "Set up Python"
      uses: actions/setup-python@v6
      with:
        python-version-file: "pyproject.toml"

    - name: "Install dependencies via uv"
      #run: uv sync --all-extras --dev # needs dependabot support
      run: uv sync --all-extras

    - name: "Automatically format files via ruff"
      uses: astral-sh/ruff-action@v3
      with:
        args: "format"

    - name: "Report on linting problems found, but do not crash the action"
      uses: astral-sh/ruff-action@v3
      with:
        args: "check --output-format=github --exit-zero"
    
    - name: "Test with pytest"
      run: |
        source .venv/bin/activate
        python -m pytest tests/ --junitxml=junit/test-results.xml
    
    - name: "Upload pytest test results"
      uses: actions/upload-artifact@v4
      with:
        name: pytest-results
        path: junit/test-results.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}

    - name: "Type check with ty"
      run: uv run ty check
      shell: bash

    # this will generate a json file with parameters
    - name: "Run `constants_and_overrides.py` to document overrideable parameters"
      run: python constants_and_overrides.py
      shell: bash

    # TODO: need to check these results back in to version control somehow
