# This is an example workflow, which you should copy to your own mod repository to create a usable action from it
# This workflow calls the reusable main workflow that handles setting up and running python

# can modify these two for labelling purposes
name: 'Deploy Stellaris mod update'

run-name: "${{ github.actor }} triggered a ${{ inputs.versionType }} update for ${{ github.event.repository.name }}"

on:
  # for calling manually and getting input popups
  workflow_dispatch:
    inputs:
      versionType:
        description: 'Version type to bump, follows semantic versioning'
        required: true
        default: 'Patch'
        type: choice
        options:
        - 'Major'
        - 'Minor'
        - 'Patch'
      versionStellaris:
        description: 'Stellaris version to support'
        required: true
        type: string
      useChangelog:
        description: |
          Fill in changelog for release?

          Expects a CHANGELOG.md file in target repo
        required: true
        type: boolean
      updateLoc:
        description: 'Copy english loc entries to other languages?'
        required: true
        type: boolean

permissions:
  contents: write

jobs:
  use_updateStellarisMod_workflow:
    uses: aerolfos/stellaris_mod_deploy_action/.github/workflows/updateStellarisMod.yml@main
    with:
      versionType: ${{ inputs.versionType }}
      versionStellaris: ${{ inputs.versionStellaris }}
      useChangelog: ${{ inputs.useChangelog }}
      updateLoc: ${{ inputs.updateLoc }}

