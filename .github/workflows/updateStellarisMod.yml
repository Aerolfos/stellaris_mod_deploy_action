# This is a reusable workflow, which sets up and runs python and the supporting stuff needed
# Call from another workflow, which will only need inputs

name: 'Trigger reusable workflow to deploy Stellaris mod update'

run-name: "${{ github.actor }} triggered a ${{ inputs.versionType }} update"

on:
  # used to avoid having to retype all this, call from another (simple) workflow
  # sadly you do need to copy the inputs everywhere
  workflow_call:
    inputs:
      versionType:
        description: 'Version type to bump, follows semantic versioning'
        required: true
        default: 'Patch'
        type: string
      versionStellaris:
        description: 'Stellaris version to support'
        required: true
        type: string
      useChangelog:
        description: |
          Fill in changelog for release?

          Expects a CHANGELOG.md file in target repo
        required: true
        type: boolean
  
  # for testing can run this workflow directly
  # this won't work because it lacks files to operate on, it's really just to see the inputs displayed and have a reference for them
  workflow_dispatch:
    inputs:
      versionType:
        description: 'Version type to bump, follows semantic versioning'
        required: true
        default: 'Patch'
        type: choice
        options:
        - 'Major'
        - 'Minor'
        - 'Patch'
      versionStellaris:
        description: 'Stellaris version to support'
        required: true
        type: string
      useChangelog:
        description: |
          Fill in changelog for release?

          Expects a CHANGELOG.md file in target repo
        required: true
        type: boolean
      
permissions:
  contents: write

jobs:
  updateStellarisMod:
    runs-on: ubuntu-latest

    steps:
    - name: Clone the mod repo
      uses: actions/checkout@v4
    
    - name: Checkout tools repo
      uses: actions/checkout@v4
      with:
        repository: aerolfos/stellaris_mod_deploy_action
        path: stellaris_mod_deploy_action
        # avoid needlessly cloning the graphic assets, want root folder with script files and extra scripts in methods though
        sparse-checkout: |
          .github
          methods
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: test
      run: ls

    - name: Run associated Python action
      uses: aerolfos/stellaris_mod_deploy_action@main
      with: 
        versionType: ${{ inputs.versionType }}
        versionStellaris: ${{ inputs.versionStellaris }}
        useChangelog: ${{ inputs.useChangelog }}

